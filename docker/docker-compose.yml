version: '3.9'

services:
    channel-challenge-base-node:
        image: channel-challenge-base-node
        build:
            context: ..
            dockerfile: docker/Dockerfile

    nginx:
        image: nginx:alpine
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        links:
            - channel-challenge-1
            - channel-challenge-2
        ports:
            - '3050:80'
        networks:
            - app-net

    channel-challenge-1:
        image: channel-challenge-base-node
        expose:
            - '3000'
        networks:
            - app-net
        command: './docker/init.sh'
        environment:
            - FORCE_COLOR=1
        volumes:
            - './../src:/project/src:ro'
            - './../environments/.env:/project/environments/env:ro'
            - './../logs:/project/logs'
        depends_on:
            - mongo1
            - mongo2
            - redis-db

    channel-challenge-2:
        image: channel-challenge-base-node
        expose:
            - '3000'
        networks:
            - app-net
        command: './docker/init.sh'
        environment:
            - FORCE_COLOR=1
        volumes:
            - './../src:/project/src:ro'
            - './../environments/.env:/project/environments/env:ro'
            - './../logs:/project/logs'
        depends_on:
            - mongo1
            - mongo2
            - redis-db

    mongo1:
        image: mongo
        ports:
            - '27016:27017'
        restart: always
        entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
        networks:
            - app-net

    mongo2:
        image: mongo
        ports:
            - '27015:27017'
        restart: always
        entrypoint: ['/usr/bin/mongod', '--bind_ip_all', '--replSet', 'rs0']
        networks:
            - app-net

    mongosetup:
        image: mongo
        depends_on:
            - mongo1
            - mongo2
        volumes:
            - .:/scripts
        restart: 'no'
        entrypoint: ['bash', '/scripts/mongo_setup.sh']
        networks:
            - app-net

    redis-db:
        image: redis
        ports:
            - '6378:6379'
        networks:
            - app-net

    rabbitmq:
        image: rabbitmq:management
        container_name: rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        ports:
            - '5672:5672'
            - '15672:15672'
        networks:
            - app-net

    es01:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.2.1
        container_name: es01
        environment:
            - node.name=es01
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es02,es03
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
            - xpack.security.enabled=false
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data01:/usr/share/elasticsearch/data
        ports:
            - '9200:9200'
        networks:
            - app-net
    es02:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.2.1
        container_name: es02
        environment:
            - node.name=es02
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es03
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
            - xpack.security.enabled=false
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data02:/usr/share/elasticsearch/data
        networks:
            - app-net
    es03:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.2.1
        container_name: es03
        environment:
            - node.name=es03
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es02
            - cluster.initial_master_nodes=es01,es02,es03
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
            - xpack.security.enabled=false
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data03:/usr/share/elasticsearch/data
        networks:
            - app-net

volumes:
    data01:
        driver: local
    data02:
        driver: local
    data03:
        driver: local

networks:
    app-net:
